import{_ as e,c as t,o as a,a as i}from"./app.39aef179.js";const u=JSON.parse('{"title":"Methods","description":"","frontmatter":{},"headers":[{"level":2,"title":"stringify","slug":"stringify"},{"level":2,"title":"stringifyFile","slug":"stringifyfile"},{"level":2,"title":"Logger methods","slug":"logger-methods"},{"level":3,"title":"unexpected(node)","slug":"unexpected-node"},{"level":3,"title":"propUndefined(propName)","slug":"propundefined-propname"}],"relativePath":"api/methods.md"}'),n={name:"api/methods.md"},r=i('<h1 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h1><h2 id="stringify" tabindex="-1">stringify <a class="header-anchor" href="#stringify" aria-hidden="true">#</a></h2><p>This function returns the AST as a string.</p><h2 id="stringifyfile" tabindex="-1">stringifyFile <a class="header-anchor" href="#stringifyfile" aria-hidden="true">#</a></h2><p>This function stringify the AST and generate a file with the string as its content.</p><h2 id="logger-methods" tabindex="-1">Logger methods <a class="header-anchor" href="#logger-methods" aria-hidden="true">#</a></h2><h3 id="unexpected-node" tabindex="-1">unexpected(node) <a class="header-anchor" href="#unexpected-node" aria-hidden="true">#</a></h3><p>It logs illegal argument exception message.</p><h3 id="propundefined-propname" tabindex="-1">propUndefined(propName) <a class="header-anchor" href="#propundefined-propname" aria-hidden="true">#</a></h3><p>It logs illegal argument as undefined.</p>',10),d=[r];function s(o,h,l,p,c,g){return a(),t("div",null,d)}var _=e(n,[["render",s]]);export{u as __pageData,_ as default};
