import{_ as s,c as a,o as n,a as l}from"./app.118cfc09.js";const i=JSON.parse('{"title":"Example","description":"","frontmatter":{},"headers":[],"relativePath":"intro/example.md"}'),p={name:"intro/example.md"},o=l(`<h1 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h1><p>Input (<em>./src/example/example.js</em>):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">generate</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">langs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_val</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_args</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_call</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">octopo-js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> callNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_call</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mixin-a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_args</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">_val</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> css </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generate</span><span style="color:#A6ACCD;">(callNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> langs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scss)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(css)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Output (<em>Console</em>):</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@include</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">mixin-a</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">12px</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div>`,5),e=[o];function t(c,r,D,F,y,A){return n(),a("div",null,e)}const _=s(p,[["render",t]]);export{i as __pageData,_ as default};
