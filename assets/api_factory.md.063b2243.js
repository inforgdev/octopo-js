import{_ as s,c as a,o,a as t}from"./app.07525731.js";const u=JSON.parse('{"title":"Factory","description":"","frontmatter":{},"headers":[{"level":2,"title":"Available Base Functions","slug":"available-base-functions","link":"#available-base-functions","children":[]},{"level":2,"title":"Available Derived Functions","slug":"available-derived-functions","link":"#available-derived-functions","children":[]}],"relativePath":"api/factory.md"}'),n={name:"api/factory.md"},l=t(`<h1 id="factory" tabindex="-1">Factory <a class="header-anchor" href="#factory" aria-hidden="true">#</a></h1><p>Factory function is a utility function to generate AST more easily.</p><p>Every factory starts with <code>_</code>.</p><p>Example:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">_call</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">size</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_params</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">w</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">24px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">24px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]))</span></span>
<span class="line"></span></code></pre></div><p>Example output:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">call</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">size</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">param</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">w</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">24px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">param</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">h</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">24px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="available-base-functions" tabindex="-1">Available Base Functions <a class="header-anchor" href="#available-base-functions" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>_call(name, args)</code></td><td>Mixin call</td><td><code>_call(&quot;example&quot;, _args([&quot;arg1&quot;]))</code></td></tr><tr><td><code>_arg(expression)</code></td><td>Mixin call argument</td><td><code>_arg(_val(&quot;24px&quot;))</code></td></tr><tr><td><code>_dec(prop, value)</code></td><td>Property declaration</td><td><code>_dec(&quot;color&quot;, _val(&quot;#00f&quot;))</code></td></tr><tr><td><code>_var(name, expression)</code></td><td>Variable declaration</td><td><code>_var(&quot;blue&quot;, _val(&quot;#00f&quot;))</code></td></tr><tr><td><code>_val(expression)</code></td><td>Value</td><td><code>_val(&quot;24px&quot;)</code></td></tr><tr><td><code>_ref(name)</code></td><td>Variable reference</td><td><code>_ref(&quot;blue&quot;)</code></td></tr><tr><td><code>_mixin(name, params, body)</code></td><td>Mixin declaration</td><td><code>_mixin(&quot;example&quot;, _params())</code></td></tr><tr><td><code>_param(name, defaultValue)</code></td><td>Mixin parameter declaration</td><td><code>_param(&quot;width&quot;, _val())</code></td></tr></tbody></table><h2 id="available-derived-functions" tabindex="-1">Available Derived Functions <a class="header-anchor" href="#available-derived-functions" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>_args(...expressions)</code></td><td>multiple <code>arg</code> util</td><td><code>_args(val(&quot;24px&quot;), val(&quot;24px&quot;))</code></td></tr><tr><td><code>_params(...expressions)</code></td><td>multiple <code>param</code> util</td><td><code>_params([&quot;w&quot;, &quot;24px&quot;], [&quot;h&quot;, &quot;24px&quot;])</code></td></tr></tbody></table>`,11),e=[l];function p(c,r,d,F,D,y){return o(),a("div",null,e)}const _=s(n,[["render",p]]);export{u as __pageData,_ as default};
